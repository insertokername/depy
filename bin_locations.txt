TODO:
  test on 32 bit machines and MAYBE aarch
  initialize a shell with a specific env var set
  given a bucket github url download a manifest from it
  ADD SPECIAL SHIM STRUCT INSTEAD OF USING PATH FOR BOTH


general install proccess routine:
  DONE change scoop install dir to depy/scoop - just change env var
  DONE rm every shim in alter install folder - just rm *

  SEMI install the app if not allready installed - req to know version to be installed bucket and read the output to check if installed
  after repeat until all deps are installed 

  rm every shim in alter install folder - just rm *

  go to all dep manifests reinstate shims in a local folder - req depy/scoop location
  update all paths - just change env var
  update special path to depy/scoop/shims - just change env var

  after this if the shell exits it is guaranteed that there is no way any leftover paths exist.


also need to implement args somehow :P

DONE TODO:
DONE   add all env_variables to env
DONE   add all bins to PATH
DONE   detect all bin types

DONE global "bin" dict
DONE 
DONE global "env_add_path" dict
DONE 
DONE architecture specific bin dict "architecture"
DONE 
DONE lib type pkgs that don't have a bin or path folder

acmesharp.json
azure-ps.json
boost.json
cacert.json
clink-completions.json
clink-flex-prompt.json
git-up.json
glfw.json
importexcel.json
jdtls.json
modern7z.json
nunit-extension-nunit-project-loader.json
nunit-extension-nunit-v2-driver.json
nunit-extension-nunit-v2-result-writer.json
nunit-extension-teamcity-event-listener.json
nunit-extension-vs-project-loader.json
oracle-instant-client-odbc.json
oracle-instant-client-sdk.json
oracle-instant-client-sqlplus.json
pester.json
powershell-yaml.json
psgithub.json
rtools.json
scoop-shim.json
terraform-provider-ibm.json
tesseract-languages.json
xpdf-tools-lsp.json
z.lua.json

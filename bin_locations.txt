TODO:
  check sccesfull install and 'python' (3.11.0) is already installed. (if allready installed)
  test on 32 bit machines and MAYBE aarch
  implement special emergency cleanup mode to reset paths
  maybe change the path adding to use the path made by scoop with use_isolated_path and just append that to the path (not necessary as of now)
  delete failed .depyenv in error
  if cancel while running program don't screw up stdout
  make operations faster by packing them into a single env set thingy
  BETTER ERRO HANDLING PLEASE
  option flags

general install proccess routine:
  DONE change scoop install dir to depy/scoop - just change env var
  DONE rm every shim in alter install folder - just rm *

  DONE install the app if not allready installed - req to know version to be installed bucket and read the output to check if installed
  after repeat until all deps are installed 

  DONE rm every shim in alter install folder - just rm *

  go to all dep manifests reinstate shims in a local folder - req depy/scoop location
  DONE update all paths - just change env var
  DONE update special path to depy/scoop/shims - just change env var

  DONE after this if the shell exits it is guaranteed that there is no way any leftover paths exist.


DONE also need to implement args somehow :P

DONE TODO:
DONE   add all env_variables to env
DONE   add all bins to PATH
DONE   detect all bin types

DONE global "bin" dict
DONE 
DONE global "env_add_path" dict
DONE 
DONE architecture specific bin dict "architecture"
DONE 
DONE lib type pkgs that don't have a bin or path folder
